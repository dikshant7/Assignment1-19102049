#include <iostream>
using namespace std;
class stack{
    public:
    char arr[1000];
    int top;
    stack()
    {
        top=-1;
    }
    bool isempty()
    {
        if(top==-1)
        {
            return true;
        }
        else return false;
    }
    bool push(char x)
    {
        if(top>=1000)
        {
            cout<<"stack overflow"<<endl;
            return false;
        }
        top++;
        arr[top]=x;
        return true;
    }
    char pop()
    {
        if(top==-1)
        {
            cout<<"stack is empty"<<endl;
            return 0;
        }
        char temp=arr[top];
        top--;
        return temp;
    }
    char peek()
    {
         if(top==-1)
        {
            cout<<"stack is empty"<<endl;
            return 0;
        }
        char temp=arr[top];
        return temp;
    }
};
 bool isValid(string str) {
    stack s;
    for(int i=0;i<str.size();i++)
    {
        if(str[i]=='('||str[i]=='{'||str[i]=='[')
        {
            s.push(str[i]);
        }
        else{
            if(s.isempty())
            {
                return false;
            }
            if(str[i]==')'&&s.peek()=='(')
            {
                s.pop();
            }
            else if(str[i]=='}'&&s.peek()=='{')
            {
                s.pop();
            }
            else if(str[i]==']'&&s.peek()=='[')
            {
                s.pop();
            }
            else{
                return false;
            }
        }
    }
    return  s.isempty();
    }
int main() {
    string Parentheses
    Parentheses
    if(isValidParentheses
    {
        cout<<"Parentheses in the string are balanced";
    }
    else{
        cout<<"Parentheses in the string are not balanced";
    }
    
}